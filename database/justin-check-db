#!/usr/bin/env python3
#
# justin-check-db - check things about justindb
#
# Copyright 2013-24, Andrew McNab for the University of Manchester
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

import os
import sys
import ssl
import pwd
import stat
import json
import time
import base64
import socket
import subprocess
import urllib.request
import pathlib
import xml.dom.minidom

## Needs MySQL-python RPM
#import MySQLdb

# WE NEED TO REMOVE OLD MySQLdb REFERENCES STILL!
import pymysql
pymysql.install_as_MySQLdb()
MySQLdb=pymysql

import justin

class justinError(Exception):
  pass

def logLine(text):
  sys.stdout.write(time.strftime('%b %d %H:%M:%S [') + str(os.getpid()) + ']: ' + text + '\n')
  sys.stdout.flush()


justin.readConf()
          
try:
  justin.conn = MySQLdb.connect(
                         host   = socket.gethostbyname(justin.mysqlHostname),
                         user   = justin.mysqlUsername,
                         passwd = justin.mysqlPassword,
                         db     = justin.mysqlDbName)
  justin.conn.autocommit(False)
  justin.cur = justin.conn.cursor(MySQLdb.cursors.DictCursor)
except Exception as e:
  logLine('Failed to create database connection (' + str(e) + ')')
  sys.exit(1)

for eventTypeID in justin.eventTypes:
  query = ('INSERT INTO event_types SET '
           'event_label="%s",event_text="%s",event_type_id=%d '
           'ON DUPLICATE KEY UPDATE event_type_id=event_type_id'
           % (justin.eventTypes[eventTypeID][0],
              justin.eventTypes[eventTypeID][1],
              eventTypeID))

  print(query)
  try:
    justin.insertUpdate(query)
  except Exception as e:
    logLine('Failed to update %d,%s,%s (%s)'
            % (eventTypeID, 
               justin.eventTypes[eventTypeID][0],
               justin.eventTypes[eventTypeID][1],
               str(e)))
  
# All ok, so commit it all to the DB
justin.conn.commit()
            
justin.conn.close()
sys.exit(0)

