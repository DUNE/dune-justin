#!/bin/sh
#
# Wrapper around condor_submit
#
# Command line arguments:
#  1: number to submit, 2: site name(s), 3: memory KB, 4: cpus, 
#  5: length seconds, 6: justIN job secret
#
# In the future, this Will be merged directly into justin-job-factory...
#

generic_job_tmp=`mktemp /tmp/generic-job.XXXXXX.py`

sed "s/###justin_job_secret###/$6/g" /var/lib/justin/justin-generic-job \
 >$generic_job_tmp
chown mcnab.dune $generic_job_tmp

cat <<EOF | su -l mcnab -c "/usr/bin/condor_submit -spool"
+Desired_Sites          = "$2"
+Job_Expected_Max_Lifetime = $5
+justIN_User            = "justinjobs@dune.hep.ac.uk"
+SingularityImage       = "/cvmfs/singularity.opensciencegrid.org/fermilab/fnal-wn-sl7:latest"
universe                = vanilla
environment = "CLUSTER=\$(Cluster) PROCESS=\$(Process) JOBSUBJOBID=\$(Cluster).\$(Process)@justin-prod-sched01.dune.hep.ac.uk"
periodic_remove         = (JobStatus == 1) && ((time() - QDate) > 86400)
max_retries             = 0
notification            = Never
executable              = $generic_job_tmp
arguments               = 
accounting_group        = group_dune.prod_keepup
accounting_group_user   = justinjobs
rank                    = Mips / 2 + Memory
job_lease_duration      = 3600
request_memory          = ${3}KB
request_cpus            = $4
request_disk            = 1
getenv                  = False
output                  = /tmp/justin-wrapper-\$(Cluster).\$(Process).out
error                   = /tmp/justin-wrapper-\$(Cluster).\$(Process).out
log                     = /tmp/justin-wrapper-\$(Cluster).\$(Process).log
transfer_output_files   = ""
should_transfer_files   = YES
when_to_transfer_output = ON_EXIT_OR_EVICT
requirements = ((isUndefined(target.GLIDEIN_DUNESite) == FALSE) && (stringListIMember(target.GLIDEIN_DUNESite,my.Desired_Sites)))
Queue $1
EOF
exit $?
