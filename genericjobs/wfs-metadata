#!/usr/bin/env python3
#
# Check any metadata JSON from bootstrap script for a given file and add
#Â WFS metadata to it. The output file and its JSON file will be looked for in 
# the workspace subdirectory.
#
# This script must be converted to base64 with something like the following 
# and included in the here document near the start of wfs-generic-job :
#
# (macOS) base64 -b 76 wfs-metadata > wfs-metadata.b64
# (Linux) base64       wfs-metadata > wfs-metadata.b64

import os
import sys
import json

try:
  fileScope = sys.argv[1]
  fileName  = sys.argv[2]
except:
  print("wfs-metadata SCOPE NAME", file=sys.stderr)
  sys.exit(1)
    
try:
  metadata = json.load(open('workspace/' + fileName + '.json', 'r'))
except FileNotFoundError:
  metadata = { "metadata" : {} }
except Exception as e:
  print("File workspace/%s.json exists but JSON load fails: %s" % 
        (fileName, str(e)))

metadata['size']      = os.path.getsize('workspace/' + fileName)
metadata['namespace'] = fileScope
metadata['name']      = fileName
metadata['metadata']['DUNE.workflow'] = {}

metadata['metadata']['DUNE.workflow']['site_name'] \
 = os.environ['WFS_SITE_NAME']
metadata['metadata']['DUNE.workflow']['request_id'] \
 = int(os.environ['WFS_REQUEST_ID'])
metadata['metadata']['DUNE.workflow']['stage_id'] \
 = int(os.environ['WFS_STAGE_ID'])
metadata['metadata']['DUNE.workflow']['hostname'] \
 = os.environ['HOSTNAME']

print(json.dumps(metadata, indent = 4, sort_keys = True))
