#!/usr/bin/env python3
#
# execute-generic-job - run the generic job script interactively for testing
#
# Copyright 2013-23, Andrew McNab for the University of Manchester
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

import os
import time
import secrets
import tempfile
import subprocess

# Needs MySQL-python RPM
import MySQLdb

# justin/conf.py must define these variables in a way that is both
# valid Python and valid Bash!
#
# mysqlUser='username'
# mysqlPassword='PAsSWoRd'
#
import justin

justin.conf.readConf()
justin.db.conn = MySQLdb.connect(host=justin.conf.mysqlHostname, 
                                 user=justin.conf.mysqlUsername,
                                 passwd=justin.conf.mysqlPassword, 
                                 db=justin.conf.mysqlDbName)
justin.db.conn.autocommit(False)
justin.db.cur = justin.db.conn.cursor(MySQLdb.cursors.DictCursor)

rawJob = open('/var/lib/justin/justin-generic-job-py','r').read()

justinJobSecret = secrets.token_urlsafe(64)
processedJob    = rawJob.replace('###justin_job_secret###', justinJobSecret)

f = tempfile.NamedTemporaryFile(mode='w', delete=False)

f.write(processedJob)

tempJobFile = f.name

f.close()

os.chmod(tempJobFile, 0o700)

clusterID = str(int(time.time()))
jobsubJobID = clusterID + '.0@execute-generic-job'

jobEnv = { 'PATH'                : '/usr/bin',
           'GLIDEIN_DUNESite'    : 'US_FNAL-FermiGrid',
           'JOBSUBJOBID'         : jobsubJobID,
           '_CONDOR_JOB_AD'      : '/tmp/_condor_ad',
           '_CONDOR_MACHINE_AD'  : '/tmp/_condor_ad'
         }

print('Insert %s into justIN DB' % jobsubJobID)

justin.db.cur.execute('INSERT INTO jobs '
                  'SET factory_name="%s",'
                  'site_id=23,'
                  'min_processors=0,'
                  'max_processors=1,'
                  'min_rss_bytes=0,'
                  'max_rss_bytes=4194304000,'
                  'max_wall_seconds=86400,'
                  'submitted_time=NOW(),'
                  'need_to_fetch_jobsub_log=FALSE,'
                  'for_awt=FALSE,'
                  'justin_job_secret="%s",'
                  'jobscript_secret="%s",'
                  'jobsub_id="%s"'
                  % (os.uname()[1],
                     justinJobSecret,
                     secrets.token_urlsafe(64),
                     jobsubJobID)
                 )

justin.db.conn.commit()

subprocess.run(
 ['/cvmfs/oasis.opensciencegrid.org/mis/apptainer/current/bin/apptainer',
  'shell',
  '--bind',
  '/cvmfs:/cvmfs',
  '--shell',
  tempJobFile,
  '/cvmfs/singularity.opensciencegrid.org/fermilab/fnal-wn-sl7:osg3.6'
 ],
 env=jobEnv)

